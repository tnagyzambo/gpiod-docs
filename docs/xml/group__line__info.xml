<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="group__line__info" kind="group">
    <compoundname>line_info</compoundname>
    <title>Line info</title>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__line__info_1ga61dadd085c1777f559549e05962b2c9e" prot="public" static="no" strong="no">
        <type></type>
        <name>@5</name>
        <enumvalue id="group__line__info_1gga61dadd085c1777f559549e05962b2c9eaea3029c9dbc0549f222260ed16f71d1e" prot="public">
          <name>GPIOD_LINE_DIRECTION_INPUT</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Direction is input - we&apos;re reading the state of a GPIO line. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__line__info_1gga61dadd085c1777f559549e05962b2c9eaedcbd6e3c95ae844b1726d4dc3808d18" prot="public">
          <name>GPIOD_LINE_DIRECTION_OUTPUT</name>
          <briefdescription>
<para>Direction is output - we&apos;re driving the GPIO line. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Possible direction settings. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="824" column="6" bodyfile="include/gpiod.h" bodystart="824" bodyend="829"/>
      </memberdef>
      <memberdef kind="enum" id="group__line__info_1ga726ca809ffd3d67ab4b8476646f26635" prot="public" static="no" strong="no">
        <type></type>
        <name>@6</name>
        <enumvalue id="group__line__info_1gga726ca809ffd3d67ab4b8476646f26635abb89d1cb3a65b37b60fbcfef81661f9e" prot="public">
          <name>GPIOD_LINE_ACTIVE_STATE_HIGH</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>The active state of a GPIO is active-high. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__line__info_1gga726ca809ffd3d67ab4b8476646f26635a210bab3e0ab10c617a48a5fe37df83df" prot="public">
          <name>GPIOD_LINE_ACTIVE_STATE_LOW</name>
          <briefdescription>
<para>The active state of a GPIO is active-low. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Possible active state settings. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="834" column="6" bodyfile="include/gpiod.h" bodystart="834" bodyend="839"/>
      </memberdef>
      <memberdef kind="enum" id="group__line__info_1ga0411cd49bb5b71852cecd93bcbf0ca2d" prot="public" static="no" strong="no">
        <type></type>
        <name>@7</name>
        <enumvalue id="group__line__info_1gga0411cd49bb5b71852cecd93bcbf0ca2daa793aeae9e54c9c91fb0b12dcc428096" prot="public">
          <name>GPIOD_LINE_BIAS_AS_IS</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>The internal bias state is unknown. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__line__info_1gga0411cd49bb5b71852cecd93bcbf0ca2dabb06ad1d6dbc13b02459b125dd692265" prot="public">
          <name>GPIOD_LINE_BIAS_DISABLE</name>
          <briefdescription>
<para>The internal bias is disabled. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__line__info_1gga0411cd49bb5b71852cecd93bcbf0ca2dad3a3fcbb53c568bd3376da7c53ff2ff6" prot="public">
          <name>GPIOD_LINE_BIAS_PULL_UP</name>
          <briefdescription>
<para>The internal pull-up bias is enabled. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__line__info_1gga0411cd49bb5b71852cecd93bcbf0ca2dae4f9da6d78cdc9938947739b3b28b9df" prot="public">
          <name>GPIOD_LINE_BIAS_PULL_DOWN</name>
          <briefdescription>
<para>The internal pull-down bias is enabled. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Possible internal bias settings. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="844" column="6" bodyfile="include/gpiod.h" bodystart="844" bodyend="853"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__line__info_1ga62168145c7008b82f2f4e0fa7e4b6677" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int gpiod_line_offset</definition>
        <argsstring>(struct gpiod_line *line) GPIOD_API</argsstring>
        <name>gpiod_line_offset</name>
        <param>
          <type>struct gpiod_line *</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Read the GPIO line offset. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO line object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Line offset. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="860" column="14" declfile="include/gpiod.h" declline="860" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__line__info_1ga0caffae9128ca8ce086bdace7706f822" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* gpiod_line_name</definition>
        <argsstring>(struct gpiod_line *line) GPIOD_API</argsstring>
        <name>gpiod_line_name</name>
        <param>
          <type>struct gpiod_line *</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Read the GPIO line name. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO line object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Name of the GPIO line as it is represented in the kernel. This routine returns a pointer to a null-terminated string or NULL if the line is unnamed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="869" column="12" declfile="include/gpiod.h" declline="869" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__line__info_1gaa2112d86b1270515adf5023652957cd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* gpiod_line_consumer</definition>
        <argsstring>(struct gpiod_line *line) GPIOD_API</argsstring>
        <name>gpiod_line_consumer</name>
        <param>
          <type>struct gpiod_line *</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Read the GPIO line consumer name. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO line object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Name of the GPIO consumer name as it is represented in the kernel. This routine returns a pointer to a null-terminated string or NULL if the line is not used. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="878" column="12" declfile="include/gpiod.h" declline="878" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__line__info_1gab577fd0d7138c1a82f585477ff2c0139" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gpiod_line_direction</definition>
        <argsstring>(struct gpiod_line *line) GPIOD_API</argsstring>
        <name>gpiod_line_direction</name>
        <param>
          <type>struct gpiod_line *</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Read the GPIO line direction setting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO line object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns GPIOD_LINE_DIRECTION_INPUT or GPIOD_LINE_DIRECTION_OUTPUT. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="885" column="5" declfile="include/gpiod.h" declline="885" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__line__info_1gabd3dae9b5178655d68310dd8652644fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gpiod_line_active_state</definition>
        <argsstring>(struct gpiod_line *line) GPIOD_API</argsstring>
        <name>gpiod_line_active_state</name>
        <param>
          <type>struct gpiod_line *</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Read the GPIO line active state setting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO line object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns GPIOD_LINE_ACTIVE_STATE_HIGH or GPIOD_LINE_ACTIVE_STATE_LOW. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="892" column="5" declfile="include/gpiod.h" declline="892" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__line__info_1gaa95bdef39ae1abffc7dc41487123de28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gpiod_line_bias</definition>
        <argsstring>(struct gpiod_line *line) GPIOD_API</argsstring>
        <name>gpiod_line_bias</name>
        <param>
          <type>struct gpiod_line *</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Read the GPIO line bias setting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO line object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns GPIOD_LINE_BIAS_PULL_UP, GPIOD_LINE_BIAS_PULL_DOWN, GPIOD_LINE_BIAS_DISABLE or GPIOD_LINE_BIAS_AS_IS. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="900" column="5" declfile="include/gpiod.h" declline="900" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__line__info_1ga38347386d5839a2dd7be7e499e1b0b57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool gpiod_line_is_used</definition>
        <argsstring>(struct gpiod_line *line) GPIOD_API</argsstring>
        <name>gpiod_line_is_used</name>
        <param>
          <type>struct gpiod_line *</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Check if the line is currently in use. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO line object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the line is in use, false otherwise.</para>
</simplesect>
The user space can&apos;t know exactly why a line is busy. It may have been requested by another process or hogged by the kernel. It only matters that the line is used and we can&apos;t request it. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="911" column="6" declfile="include/gpiod.h" declline="911" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__line__info_1ga49501d4aa72d302748681ffd942895b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool gpiod_line_is_open_drain</definition>
        <argsstring>(struct gpiod_line *line) GPIOD_API</argsstring>
        <name>gpiod_line_is_open_drain</name>
        <param>
          <type>struct gpiod_line *</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Check if the line is an open-drain GPIO. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO line object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the line is an open-drain GPIO, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="918" column="6" declfile="include/gpiod.h" declline="918" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__line__info_1ga31d102da6befc8b579d7a2c05876b756" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool gpiod_line_is_open_source</definition>
        <argsstring>(struct gpiod_line *line) GPIOD_API</argsstring>
        <name>gpiod_line_is_open_source</name>
        <param>
          <type>struct gpiod_line *</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Check if the line is an open-source GPIO. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO line object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the line is an open-source GPIO, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="925" column="6" declfile="include/gpiod.h" declline="925" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__line__info_1ga92863e269a94dc5faade05f5107e33cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gpiod_line_update</definition>
        <argsstring>(struct gpiod_line *line) GPIOD_API</argsstring>
        <name>gpiod_line_update</name>
        <param>
          <type>struct gpiod_line *</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Re-read the line info. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO line object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if the operation succeeds. In case of an error this routine returns -1 and sets the last error number.</para>
</simplesect>
The line info is initially retrieved from the kernel by <ref refid="group__chips_1gaba9fe5b1cf0c33cd9d7ee911a9c2d4b1" kindref="member">gpiod_chip_get_line()</ref> and is later re-read after every successful request. Users can use this function to manually re-read the line info when needed.</para>
<para>We currently have no mechanism provided by the kernel for keeping the line info synchronized and for the sake of speed and simplicity of this low-level library we don&apos;t want to re-read the line info automatically everytime a property is retrieved. Any daemon using this library must track the state of lines on its own and call this routine if needed.</para>
<para>The state of requested lines is kept synchronized (or rather cannot be changed by external agents while the ownership of the line is taken) so there&apos;s no need to call this function in that case. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="947" column="5" declfile="include/gpiod.h" declline="947" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__line__info_1gade14511253e8d4d754fe8978607c459c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool gpiod_line_needs_update</definition>
        <argsstring>(struct gpiod_line *line) GPIOD_API GPIOD_DEPRECATED</argsstring>
        <name>gpiod_line_needs_update</name>
        <param>
          <type>struct gpiod_line *</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Check if the line info needs to be updated. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO line object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Always returns false. </para>
</simplesect>
<xrefsect id="deprecated_1_deprecated000003"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This mechanism no longer exists in the library and this function does nothing. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="957" column="1" declfile="include/gpiod.h" declline="957" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Definitions and functions for retrieving kernel information about both requested and free lines. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>

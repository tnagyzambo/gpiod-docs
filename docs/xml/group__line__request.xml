<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="group__line__request" kind="group">
    <compoundname>line_request</compoundname>
    <title>Line requests</title>
    <innerclass refid="structgpiod__line__request__config" prot="public">gpiod_line_request_config</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__line__request_1gabed82baf7f470b522273a3e37c24c600" prot="public" static="no" strong="no">
        <type></type>
        <name>@8</name>
        <enumvalue id="group__line__request_1ggabed82baf7f470b522273a3e37c24c600a094a655c1b3896f7d8e078ee6cb461a9" prot="public">
          <name>GPIOD_LINE_REQUEST_DIRECTION_AS_IS</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Request the line(s), but don&apos;t change current direction. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__line__request_1ggabed82baf7f470b522273a3e37c24c600ad6e63a2afc02c0548d2c15e56f3f64ef" prot="public">
          <name>GPIOD_LINE_REQUEST_DIRECTION_INPUT</name>
          <briefdescription>
<para>Request the line(s) for reading the GPIO line state. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__line__request_1ggabed82baf7f470b522273a3e37c24c600a770c3cd9a587b812e00c5caab9b25961" prot="public">
          <name>GPIOD_LINE_REQUEST_DIRECTION_OUTPUT</name>
          <briefdescription>
<para>Request the line(s) for setting the GPIO line state. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__line__request_1ggabed82baf7f470b522273a3e37c24c600a2925bb25d0febefd20d45daccf14c96a" prot="public">
          <name>GPIOD_LINE_REQUEST_EVENT_FALLING_EDGE</name>
          <briefdescription>
<para>Only watch falling edge events. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__line__request_1ggabed82baf7f470b522273a3e37c24c600ac3e277e3622e41c7d805b156c2295534" prot="public">
          <name>GPIOD_LINE_REQUEST_EVENT_RISING_EDGE</name>
          <briefdescription>
<para>Only watch rising edge events. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__line__request_1ggabed82baf7f470b522273a3e37c24c600a3b168f7bbfa641443d21af25ccc7ca35" prot="public">
          <name>GPIOD_LINE_REQUEST_EVENT_BOTH_EDGES</name>
          <briefdescription>
<para>Monitor both types of events. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Available types of requests. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="972" column="6" bodyfile="include/gpiod.h" bodystart="972" bodyend="985"/>
      </memberdef>
      <memberdef kind="enum" id="group__line__request_1gab04a0655cd1e3bcac5e8f48c18df1a57" prot="public" static="no" strong="no">
        <type></type>
        <name>@9</name>
        <enumvalue id="group__line__request_1ggab04a0655cd1e3bcac5e8f48c18df1a57aaa6ac96d89df16453322e3ac6b8d74e7" prot="public">
          <name>GPIOD_LINE_REQUEST_FLAG_OPEN_DRAIN</name>
          <initializer>= GPIOD_BIT(0)</initializer>
          <briefdescription>
<para>The line is an open-drain port. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__line__request_1ggab04a0655cd1e3bcac5e8f48c18df1a57ab54d1785699976cb9d3c74bdee53f6b3" prot="public">
          <name>GPIOD_LINE_REQUEST_FLAG_OPEN_SOURCE</name>
          <initializer>= GPIOD_BIT(1)</initializer>
          <briefdescription>
<para>The line is an open-source port. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__line__request_1ggab04a0655cd1e3bcac5e8f48c18df1a57ac500ede3c4a86742def54b1113dbf436" prot="public">
          <name>GPIOD_LINE_REQUEST_FLAG_ACTIVE_LOW</name>
          <initializer>= GPIOD_BIT(2)</initializer>
          <briefdescription>
<para>The active state of the line is low (high is the default). </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__line__request_1ggab04a0655cd1e3bcac5e8f48c18df1a57a6e652d8761f2e7e4d7f9dd423e8c7195" prot="public">
          <name>GPIOD_LINE_REQUEST_FLAG_BIAS_DISABLE</name>
          <initializer>= GPIOD_BIT(3)</initializer>
          <briefdescription>
<para>The line has neither either pull-up nor pull-down resistor. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__line__request_1ggab04a0655cd1e3bcac5e8f48c18df1a57ae945cc92de247a56afac968852c8360f" prot="public">
          <name>GPIOD_LINE_REQUEST_FLAG_BIAS_PULL_DOWN</name>
          <initializer>= GPIOD_BIT(4)</initializer>
          <briefdescription>
<para>The line has pull-down resistor enabled. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__line__request_1ggab04a0655cd1e3bcac5e8f48c18df1a57a7e1cc39360b8e0a84f63ead0943aeee7" prot="public">
          <name>GPIOD_LINE_REQUEST_FLAG_BIAS_PULL_UP</name>
          <initializer>= GPIOD_BIT(5)</initializer>
          <briefdescription>
<para>The line has pull-up resistor enabled. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Miscellaneous GPIO request flags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="990" column="6" bodyfile="include/gpiod.h" bodystart="990" bodyend="1003"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__line__request_1gad520fa1a0be91198cffc3d1141847964" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gpiod_line_request</definition>
        <argsstring>(struct gpiod_line *line, const struct gpiod_line_request_config *config, int default_val) GPIOD_API</argsstring>
        <name>gpiod_line_request</name>
        <param>
          <type>struct gpiod_line *</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const struct <ref refid="structgpiod__line__request__config" kindref="compound">gpiod_line_request_config</ref> *</type>
          <declname>config</declname>
        </param>
        <param>
          <type>int</type>
          <declname>default_val</declname>
        </param>
        <briefdescription>
<para>Reserve a single line. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO line object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Request options. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>default_val</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial line value - only relevant if we&apos;re setting the direction to output. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if the line was properly reserved. In case of an error this routine returns -1 and sets the last error number.</para>
</simplesect>
If this routine succeeds, the caller takes ownership of the GPIO line until it&apos;s released. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="1029" column="5" declfile="include/gpiod.h" declline="1029" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__line__request_1gabe6226cb78226fe737eddf99d47eedc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gpiod_line_request_input</definition>
        <argsstring>(struct gpiod_line *line, const char *consumer) GPIOD_API</argsstring>
        <name>gpiod_line_request_input</name>
        <param>
          <type>struct gpiod_line *</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>consumer</declname>
        </param>
        <briefdescription>
<para>Reserve a single line, set the direction to input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO line object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>consumer</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the consumer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if the line was properly reserved, -1 on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="1039" column="5" declfile="include/gpiod.h" declline="1039" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__line__request_1ga303bc402be82ed1bd95b7b72fd1d54fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gpiod_line_request_output</definition>
        <argsstring>(struct gpiod_line *line, const char *consumer, int default_val) GPIOD_API</argsstring>
        <name>gpiod_line_request_output</name>
        <param>
          <type>struct gpiod_line *</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>consumer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>default_val</declname>
        </param>
        <briefdescription>
<para>Reserve a single line, set the direction to output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO line object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>consumer</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the consumer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>default_val</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial line value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if the line was properly reserved, -1 on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="1049" column="5" declfile="include/gpiod.h" declline="1049" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__line__request_1gadd60c323db0e3d492713d6032e155ea1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gpiod_line_request_rising_edge_events</definition>
        <argsstring>(struct gpiod_line *line, const char *consumer) GPIOD_API</argsstring>
        <name>gpiod_line_request_rising_edge_events</name>
        <param>
          <type>struct gpiod_line *</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>consumer</declname>
        </param>
        <briefdescription>
<para>Request rising edge event notifications on a single line. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO line object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>consumer</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the consumer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if the operation succeeds, -1 on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="1058" column="5" declfile="include/gpiod.h" declline="1058" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__line__request_1gacf49fd94e99b1480db63ccefa38644d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gpiod_line_request_falling_edge_events</definition>
        <argsstring>(struct gpiod_line *line, const char *consumer) GPIOD_API</argsstring>
        <name>gpiod_line_request_falling_edge_events</name>
        <param>
          <type>struct gpiod_line *</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>consumer</declname>
        </param>
        <briefdescription>
<para>Request falling edge event notifications on a single line. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO line object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>consumer</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the consumer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if the operation succeeds, -1 on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="1067" column="5" declfile="include/gpiod.h" declline="1067" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__line__request_1ga2198ed36422b516d043bb2867621c6bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gpiod_line_request_both_edges_events</definition>
        <argsstring>(struct gpiod_line *line, const char *consumer) GPIOD_API</argsstring>
        <name>gpiod_line_request_both_edges_events</name>
        <param>
          <type>struct gpiod_line *</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>consumer</declname>
        </param>
        <briefdescription>
<para>Request all event type notifications on a single line. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO line object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>consumer</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the consumer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if the operation succeeds, -1 on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="1076" column="5" declfile="include/gpiod.h" declline="1076" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__line__request_1gaa4dd1a15015b42fef6266eb42a4ec2de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gpiod_line_request_input_flags</definition>
        <argsstring>(struct gpiod_line *line, const char *consumer, int flags) GPIOD_API</argsstring>
        <name>gpiod_line_request_input_flags</name>
        <param>
          <type>struct gpiod_line *</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>consumer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Reserve a single line, set the direction to input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO line object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>consumer</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the consumer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Additional request flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if the line was properly reserved, -1 on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="1086" column="5" declfile="include/gpiod.h" declline="1086" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__line__request_1gaf74984a0b6dddf742a616ae20e304712" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gpiod_line_request_output_flags</definition>
        <argsstring>(struct gpiod_line *line, const char *consumer, int flags, int default_val) GPIOD_API</argsstring>
        <name>gpiod_line_request_output_flags</name>
        <param>
          <type>struct gpiod_line *</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>consumer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>int</type>
          <declname>default_val</declname>
        </param>
        <briefdescription>
<para>Reserve a single line, set the direction to output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO line object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>consumer</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the consumer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Additional request flags. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>default_val</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial line value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if the line was properly reserved, -1 on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="1097" column="5" declfile="include/gpiod.h" declline="1097" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__line__request_1gab0002ac08695fd38d7e8f7a14dad34f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gpiod_line_request_rising_edge_events_flags</definition>
        <argsstring>(struct gpiod_line *line, const char *consumer, int flags) GPIOD_API</argsstring>
        <name>gpiod_line_request_rising_edge_events_flags</name>
        <param>
          <type>struct gpiod_line *</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>consumer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Request rising edge event notifications on a single line. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO line object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>consumer</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the consumer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Additional request flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if the operation succeeds, -1 on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="1108" column="5" declfile="include/gpiod.h" declline="1108" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__line__request_1ga9261dbe13e0cf6f36cee7bf7f2e9f23f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gpiod_line_request_falling_edge_events_flags</definition>
        <argsstring>(struct gpiod_line *line, const char *consumer, int flags) GPIOD_API</argsstring>
        <name>gpiod_line_request_falling_edge_events_flags</name>
        <param>
          <type>struct gpiod_line *</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>consumer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Request falling edge event notifications on a single line. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO line object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>consumer</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the consumer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Additional request flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if the operation succeeds, -1 on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="1119" column="5" declfile="include/gpiod.h" declline="1119" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__line__request_1gaefec58ef5c34cdc6c0cbdefc9b5541b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gpiod_line_request_both_edges_events_flags</definition>
        <argsstring>(struct gpiod_line *line, const char *consumer, int flags) GPIOD_API</argsstring>
        <name>gpiod_line_request_both_edges_events_flags</name>
        <param>
          <type>struct gpiod_line *</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>consumer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Request all event type notifications on a single line. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO line object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>consumer</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the consumer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Additional request flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if the operation succeeds, -1 on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="1130" column="5" declfile="include/gpiod.h" declline="1130" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__line__request_1gac2e36e722e5c15c10fc7f6edf948f1c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gpiod_line_request_bulk</definition>
        <argsstring>(struct gpiod_line_bulk *bulk, const struct gpiod_line_request_config *config, const int *default_vals) GPIOD_API</argsstring>
        <name>gpiod_line_request_bulk</name>
        <param>
          <type>struct <ref refid="structgpiod__line__bulk" kindref="compound">gpiod_line_bulk</ref> *</type>
          <declname>bulk</declname>
        </param>
        <param>
          <type>const struct <ref refid="structgpiod__line__request__config" kindref="compound">gpiod_line_request_config</ref> *</type>
          <declname>config</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>default_vals</declname>
        </param>
        <briefdescription>
<para>Reserve a set of GPIO lines. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bulk</parametername>
</parameternamelist>
<parameterdescription>
<para>Set of GPIO lines to reserve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Request options. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>default_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial line values - only relevant if we&apos;re setting the direction to output. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if the all lines were properly requested. In case of an error this routine returns -1 and sets the last error number.</para>
</simplesect>
If this routine succeeds, the caller takes ownership of the GPIO lines until they&apos;re released. All the requested lines must be prodivided by the same gpiochip. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="1147" column="5" declfile="include/gpiod.h" declline="1147" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__line__request_1gafd0c43ab707e74b749ea971b0725eb95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gpiod_line_request_bulk_input</definition>
        <argsstring>(struct gpiod_line_bulk *bulk, const char *consumer) GPIOD_API</argsstring>
        <name>gpiod_line_request_bulk_input</name>
        <param>
          <type>struct <ref refid="structgpiod__line__bulk" kindref="compound">gpiod_line_bulk</ref> *</type>
          <declname>bulk</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>consumer</declname>
        </param>
        <briefdescription>
<para>Reserve a set of GPIO lines, set the direction to input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bulk</parametername>
</parameternamelist>
<parameterdescription>
<para>Set of GPIO lines to reserve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>consumer</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the consumer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if the lines were properly reserved, -1 on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="1157" column="5" declfile="include/gpiod.h" declline="1157" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__line__request_1ga42d84b2db88f1d1facee58d615d3bb7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gpiod_line_request_bulk_output</definition>
        <argsstring>(struct gpiod_line_bulk *bulk, const char *consumer, const int *default_vals) GPIOD_API</argsstring>
        <name>gpiod_line_request_bulk_output</name>
        <param>
          <type>struct <ref refid="structgpiod__line__bulk" kindref="compound">gpiod_line_bulk</ref> *</type>
          <declname>bulk</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>consumer</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>default_vals</declname>
        </param>
        <briefdescription>
<para>Reserve a set of GPIO lines, set the direction to output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bulk</parametername>
</parameternamelist>
<parameterdescription>
<para>Set of GPIO lines to reserve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>consumer</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the consumer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>default_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial line values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if the lines were properly reserved, -1 on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="1167" column="5" declfile="include/gpiod.h" declline="1167" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__line__request_1ga948e2a0627bfce92536dd9c78fdf88c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gpiod_line_request_bulk_rising_edge_events</definition>
        <argsstring>(struct gpiod_line_bulk *bulk, const char *consumer) GPIOD_API</argsstring>
        <name>gpiod_line_request_bulk_rising_edge_events</name>
        <param>
          <type>struct <ref refid="structgpiod__line__bulk" kindref="compound">gpiod_line_bulk</ref> *</type>
          <declname>bulk</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>consumer</declname>
        </param>
        <briefdescription>
<para>Request rising edge event notifications on a set of lines. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bulk</parametername>
</parameternamelist>
<parameterdescription>
<para>Set of GPIO lines to request. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>consumer</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the consumer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if the operation succeeds, -1 on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="1177" column="5" declfile="include/gpiod.h" declline="1177" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__line__request_1ga6eac4ea5e415b15d0da13c5110fa7266" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gpiod_line_request_bulk_falling_edge_events</definition>
        <argsstring>(struct gpiod_line_bulk *bulk, const char *consumer) GPIOD_API</argsstring>
        <name>gpiod_line_request_bulk_falling_edge_events</name>
        <param>
          <type>struct <ref refid="structgpiod__line__bulk" kindref="compound">gpiod_line_bulk</ref> *</type>
          <declname>bulk</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>consumer</declname>
        </param>
        <briefdescription>
<para>Request falling edge event notifications on a set of lines. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bulk</parametername>
</parameternamelist>
<parameterdescription>
<para>Set of GPIO lines to request. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>consumer</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the consumer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if the operation succeeds, -1 on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="1186" column="5" declfile="include/gpiod.h" declline="1186" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__line__request_1ga72788c2e2cf7a631108aec97ee41c1d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gpiod_line_request_bulk_both_edges_events</definition>
        <argsstring>(struct gpiod_line_bulk *bulk, const char *consumer) GPIOD_API</argsstring>
        <name>gpiod_line_request_bulk_both_edges_events</name>
        <param>
          <type>struct <ref refid="structgpiod__line__bulk" kindref="compound">gpiod_line_bulk</ref> *</type>
          <declname>bulk</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>consumer</declname>
        </param>
        <briefdescription>
<para>Request all event type notifications on a set of lines. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bulk</parametername>
</parameternamelist>
<parameterdescription>
<para>Set of GPIO lines to request. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>consumer</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the consumer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if the operation succeeds, -1 on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="1195" column="5" declfile="include/gpiod.h" declline="1195" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__line__request_1ga8e424335311ebdf9a4f23a4009ca3192" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gpiod_line_request_bulk_input_flags</definition>
        <argsstring>(struct gpiod_line_bulk *bulk, const char *consumer, int flags) GPIOD_API</argsstring>
        <name>gpiod_line_request_bulk_input_flags</name>
        <param>
          <type>struct <ref refid="structgpiod__line__bulk" kindref="compound">gpiod_line_bulk</ref> *</type>
          <declname>bulk</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>consumer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Reserve a set of GPIO lines, set the direction to input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bulk</parametername>
</parameternamelist>
<parameterdescription>
<para>Set of GPIO lines to reserve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>consumer</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the consumer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Additional request flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if the lines were properly reserved, -1 on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="1205" column="5" declfile="include/gpiod.h" declline="1205" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__line__request_1ga13b212c9280d4919c697aefa838bcd80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gpiod_line_request_bulk_output_flags</definition>
        <argsstring>(struct gpiod_line_bulk *bulk, const char *consumer, int flags, const int *default_vals) GPIOD_API</argsstring>
        <name>gpiod_line_request_bulk_output_flags</name>
        <param>
          <type>struct <ref refid="structgpiod__line__bulk" kindref="compound">gpiod_line_bulk</ref> *</type>
          <declname>bulk</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>consumer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>default_vals</declname>
        </param>
        <briefdescription>
<para>Reserve a set of GPIO lines, set the direction to output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bulk</parametername>
</parameternamelist>
<parameterdescription>
<para>Set of GPIO lines to reserve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>consumer</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the consumer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Additional request flags. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>default_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial line values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if the lines were properly reserved, -1 on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="1217" column="5" declfile="include/gpiod.h" declline="1217" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__line__request_1gae28e15c99a883d29f97a42c75a099028" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gpiod_line_request_bulk_rising_edge_events_flags</definition>
        <argsstring>(struct gpiod_line_bulk *bulk, const char *consumer, int flags) GPIOD_API</argsstring>
        <name>gpiod_line_request_bulk_rising_edge_events_flags</name>
        <param>
          <type>struct <ref refid="structgpiod__line__bulk" kindref="compound">gpiod_line_bulk</ref> *</type>
          <declname>bulk</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>consumer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Request rising edge event notifications on a set of lines. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bulk</parametername>
</parameternamelist>
<parameterdescription>
<para>Set of GPIO lines to request. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>consumer</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the consumer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Additional request flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if the operation succeeds, -1 on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="1228" column="5" declfile="include/gpiod.h" declline="1228" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__line__request_1ga6c82948bab539c2448c08f265fbd62c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gpiod_line_request_bulk_falling_edge_events_flags</definition>
        <argsstring>(struct gpiod_line_bulk *bulk, const char *consumer, int flags) GPIOD_API</argsstring>
        <name>gpiod_line_request_bulk_falling_edge_events_flags</name>
        <param>
          <type>struct <ref refid="structgpiod__line__bulk" kindref="compound">gpiod_line_bulk</ref> *</type>
          <declname>bulk</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>consumer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Request falling edge event notifications on a set of lines. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bulk</parametername>
</parameternamelist>
<parameterdescription>
<para>Set of GPIO lines to request. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>consumer</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the consumer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Additional request flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if the operation succeeds, -1 on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="1240" column="5" declfile="include/gpiod.h" declline="1240" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__line__request_1ga767334183c16c4ef5b96be5c96d293a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gpiod_line_request_bulk_both_edges_events_flags</definition>
        <argsstring>(struct gpiod_line_bulk *bulk, const char *consumer, int flags) GPIOD_API</argsstring>
        <name>gpiod_line_request_bulk_both_edges_events_flags</name>
        <param>
          <type>struct <ref refid="structgpiod__line__bulk" kindref="compound">gpiod_line_bulk</ref> *</type>
          <declname>bulk</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>consumer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Request all event type notifications on a set of lines. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bulk</parametername>
</parameternamelist>
<parameterdescription>
<para>Set of GPIO lines to request. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>consumer</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the consumer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Additional request flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if the operation succeeds, -1 on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="1252" column="5" declfile="include/gpiod.h" declline="1252" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__line__request_1ga129d28476be19cd8fc75455ea80f5ee1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gpiod_line_release</definition>
        <argsstring>(struct gpiod_line *line) GPIOD_API</argsstring>
        <name>gpiod_line_release</name>
        <param>
          <type>struct gpiod_line *</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Release a previously reserved line. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO line object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="1261" column="6" declfile="include/gpiod.h" declline="1261" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__line__request_1ga3c224e8b98157d643967150f394273a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gpiod_line_release_bulk</definition>
        <argsstring>(struct gpiod_line_bulk *bulk) GPIOD_API</argsstring>
        <name>gpiod_line_release_bulk</name>
        <param>
          <type>struct <ref refid="structgpiod__line__bulk" kindref="compound">gpiod_line_bulk</ref> *</type>
          <declname>bulk</declname>
        </param>
        <briefdescription>
<para>Release a set of previously reserved lines. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bulk</parametername>
</parameternamelist>
<parameterdescription>
<para>Set of GPIO lines to release.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
If the lines were not previously requested together, the behavior is undefined. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="1270" column="6" declfile="include/gpiod.h" declline="1270" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__line__request_1ga29a5c43302b6bd678124ad0f06f12c8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool gpiod_line_is_requested</definition>
        <argsstring>(struct gpiod_line *line) GPIOD_API</argsstring>
        <name>gpiod_line_is_requested</name>
        <param>
          <type>struct gpiod_line *</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Check if the calling user has ownership of this line. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO line object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if given line was requested, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="1277" column="6" declfile="include/gpiod.h" declline="1277" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__line__request_1gad1c150d92f1ba4f5308083218912969f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool gpiod_line_is_free</definition>
        <argsstring>(struct gpiod_line *line) GPIOD_API</argsstring>
        <name>gpiod_line_is_free</name>
        <param>
          <type>struct gpiod_line *</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Check if the calling user has neither requested ownership of this line nor configured any event notifications. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO line object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if given line is free, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="1285" column="6" declfile="include/gpiod.h" declline="1285" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Interface for requesting GPIO lines from userspace for both values and events. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>

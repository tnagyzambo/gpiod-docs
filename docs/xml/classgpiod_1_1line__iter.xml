<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classgpiod_1_1line__iter" kind="class" language="C++" prot="public">
    <compoundname>gpiod::line_iter</compoundname>
    <includes refid="gpiod_8hpp" local="no">gpiod.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgpiod_1_1line__iter_1a83548041f57a903f9cba5e1c8feebb4d" prot="private" static="no" mutable="no">
        <type>::std::shared_ptr&lt;::gpiod_line_iter &gt;</type>
        <definition>::std::shared_ptr&lt;::gpiod_line_iter&gt; gpiod::line_iter::_m_iter</definition>
        <argsstring></argsstring>
        <name>_m_iter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="1056" column="19" bodyfile="bindings/cxx/gpiod.hpp" bodystart="1056" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgpiod_1_1line__iter_1a4ee52b841477c86e6319a5cb8ead1649" prot="private" static="no" mutable="no">
        <type><ref refid="classgpiod_1_1line" kindref="compound">line</ref></type>
        <definition>line gpiod::line_iter::_m_current</definition>
        <argsstring></argsstring>
        <name>_m_current</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="1057" column="6" bodyfile="bindings/cxx/gpiod.hpp" bodystart="1057" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgpiod_1_1line__iter_1a4032ba38f1e3a9b91d57e1e0a2d044a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref></type>
        <definition>GPIOD_API gpiod::line_iter::line_iter</definition>
        <argsstring>(void)=default</argsstring>
        <name>line_iter</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Creates the end iterator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="981" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__iter_1a1a6166ae141f69acb6696d04aace82ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref></type>
        <definition>GPIOD_API gpiod::line_iter::line_iter</definition>
        <argsstring>(const chip &amp;owner)</argsstring>
        <name>line_iter</name>
        <param>
          <type>const <ref refid="classgpiod_1_1chip" kindref="compound">chip</ref> &amp;</type>
          <declname>owner</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Creates the begin iterator. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>owner</parametername>
</parameternamelist>
<parameterdescription>
<para>Chip owning the GPIO lines over which we want to iterate. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="987" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__iter_1a53acc1bd59e5b8a3403c812a1baac490" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref></type>
        <definition>GPIOD_API gpiod::line_iter::line_iter</definition>
        <argsstring>(const line_iter &amp;other)=default</argsstring>
        <name>line_iter</name>
        <param>
          <type>const <ref refid="classgpiod_1_1line__iter" kindref="compound">line_iter</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Other line iterator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="993" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__iter_1ad2e4c98e25f4bf687edec2271d972abf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref></type>
        <definition>GPIOD_API gpiod::line_iter::line_iter</definition>
        <argsstring>(line_iter &amp;&amp;other)=default</argsstring>
        <name>line_iter</name>
        <param>
          <type><ref refid="classgpiod_1_1line__iter" kindref="compound">line_iter</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Move constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Other line iterator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="999" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__iter_1a15fc7fd9304348fe402dfae0c410b35e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> <ref refid="classgpiod_1_1line__iter" kindref="compound">line_iter</ref> &amp;</type>
        <definition>GPIOD_API line_iter&amp; gpiod::line_iter::operator=</definition>
        <argsstring>(const line_iter &amp;other)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classgpiod_1_1line__iter" kindref="compound">line_iter</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Assignment operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Other line iterator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to this <ref refid="classgpiod_1_1line__iter" kindref="compound">line_iter</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="1006" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__iter_1aced6fc50c8337d272155e4688ecfc541" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> <ref refid="classgpiod_1_1line__iter" kindref="compound">line_iter</ref> &amp;</type>
        <definition>GPIOD_API line_iter&amp; gpiod::line_iter::operator=</definition>
        <argsstring>(line_iter &amp;&amp;other)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classgpiod_1_1line__iter" kindref="compound">line_iter</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Move assignment operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Other line iterator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to this <ref refid="classgpiod_1_1line__iter" kindref="compound">line_iter</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="1013" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__iter_1ad73dda12f4272cd8054ad16919ca87f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref></type>
        <definition>GPIOD_API gpiod::line_iter::~line_iter</definition>
        <argsstring>(void)=default</argsstring>
        <name>~line_iter</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="1018" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__iter_1a066ff98e721b62c1631ced1ae2d0136e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> <ref refid="classgpiod_1_1line__iter" kindref="compound">line_iter</ref> &amp;</type>
        <definition>GPIOD_API line_iter&amp; gpiod::line_iter::operator++</definition>
        <argsstring>(void)</argsstring>
        <name>operator++</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Advance the iterator by one element. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Reference to this iterator. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="1024" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__iter_1a01203c697f8bc5fc04660e569ae60e56" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> <ref refid="classgpiod_1_1line" kindref="compound">line</ref> &amp;</type>
        <definition>const GPIOD_API line&amp; gpiod::line_iter::operator*</definition>
        <argsstring>(void) const</argsstring>
        <name>operator*</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Dereference current element. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Current GPIO line by reference. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="1030" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__iter_1ad694bc6ad9320d8f806cb31bed0e08d2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> <ref refid="classgpiod_1_1line" kindref="compound">line</ref> *</type>
        <definition>const GPIOD_API line* gpiod::line_iter::operator-&gt;</definition>
        <argsstring>(void) const</argsstring>
        <name>operator-&gt;</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Member access operator. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Current GPIO line by pointer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="1036" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__iter_1a018384105ebf06a519a538c070b128e2" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> bool</type>
        <definition>GPIOD_API bool gpiod::line_iter::operator==</definition>
        <argsstring>(const line_iter &amp;rhs) const noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classgpiod_1_1line__iter" kindref="compound">line_iter</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Check if this operator points to the same element. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>Right-hand side of the equation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if this iterator points to the same <ref refid="classgpiod_1_1line__iter" kindref="compound">line_iter</ref>, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="1044" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__iter_1ae1df6ae38f2249ac6fd96b12c79dbc46" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> bool</type>
        <definition>GPIOD_API bool gpiod::line_iter::operator!=</definition>
        <argsstring>(const line_iter &amp;rhs) const noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classgpiod_1_1line__iter" kindref="compound">line_iter</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Check if this operator doesn&apos;t point to the same element. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>Right-hand side of the equation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if this iterator doesn&apos;t point to the same <ref refid="classgpiod_1_1line__iter" kindref="compound">line_iter</ref>, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="1052" column="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Allows to iterate over all lines owned by a GPIO chip. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="bindings/cxx/gpiod.hpp" line="975" column="1" bodyfile="bindings/cxx/gpiod.hpp" bodystart="974" bodyend="1058"/>
    <listofallmembers>
      <member refid="classgpiod_1_1line__iter_1a4ee52b841477c86e6319a5cb8ead1649" prot="private" virt="non-virtual"><scope>gpiod::line_iter</scope><name>_m_current</name></member>
      <member refid="classgpiod_1_1line__iter_1a83548041f57a903f9cba5e1c8feebb4d" prot="private" virt="non-virtual"><scope>gpiod::line_iter</scope><name>_m_iter</name></member>
      <member refid="classgpiod_1_1line__iter_1a4032ba38f1e3a9b91d57e1e0a2d044a7" prot="public" virt="non-virtual"><scope>gpiod::line_iter</scope><name>line_iter</name></member>
      <member refid="classgpiod_1_1line__iter_1a1a6166ae141f69acb6696d04aace82ed" prot="public" virt="non-virtual"><scope>gpiod::line_iter</scope><name>line_iter</name></member>
      <member refid="classgpiod_1_1line__iter_1a53acc1bd59e5b8a3403c812a1baac490" prot="public" virt="non-virtual"><scope>gpiod::line_iter</scope><name>line_iter</name></member>
      <member refid="classgpiod_1_1line__iter_1ad2e4c98e25f4bf687edec2271d972abf" prot="public" virt="non-virtual"><scope>gpiod::line_iter</scope><name>line_iter</name></member>
      <member refid="classgpiod_1_1line__iter_1ae1df6ae38f2249ac6fd96b12c79dbc46" prot="public" virt="non-virtual"><scope>gpiod::line_iter</scope><name>operator!=</name></member>
      <member refid="classgpiod_1_1line__iter_1a01203c697f8bc5fc04660e569ae60e56" prot="public" virt="non-virtual"><scope>gpiod::line_iter</scope><name>operator*</name></member>
      <member refid="classgpiod_1_1line__iter_1a066ff98e721b62c1631ced1ae2d0136e" prot="public" virt="non-virtual"><scope>gpiod::line_iter</scope><name>operator++</name></member>
      <member refid="classgpiod_1_1line__iter_1ad694bc6ad9320d8f806cb31bed0e08d2" prot="public" virt="non-virtual"><scope>gpiod::line_iter</scope><name>operator-&gt;</name></member>
      <member refid="classgpiod_1_1line__iter_1a15fc7fd9304348fe402dfae0c410b35e" prot="public" virt="non-virtual"><scope>gpiod::line_iter</scope><name>operator=</name></member>
      <member refid="classgpiod_1_1line__iter_1aced6fc50c8337d272155e4688ecfc541" prot="public" virt="non-virtual"><scope>gpiod::line_iter</scope><name>operator=</name></member>
      <member refid="classgpiod_1_1line__iter_1a018384105ebf06a519a538c070b128e2" prot="public" virt="non-virtual"><scope>gpiod::line_iter</scope><name>operator==</name></member>
      <member refid="classgpiod_1_1line__iter_1ad73dda12f4272cd8054ad16919ca87f8" prot="public" virt="non-virtual"><scope>gpiod::line_iter</scope><name>~line_iter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

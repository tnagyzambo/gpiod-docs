<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classgpiod_1_1line__bulk" kind="class" language="C++" prot="public">
    <compoundname>gpiod::line_bulk</compoundname>
    <includes refid="gpiod_8hpp" local="no">gpiod.hpp</includes>
    <innerclass refid="classgpiod_1_1line__bulk_1_1iterator" prot="public">gpiod::line_bulk::iterator</innerclass>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classgpiod_1_1line__bulk_1aff05a49a760fe43396474a9073158a98" prot="public" static="yes" mutable="no">
        <type>const <ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> unsigned int</type>
        <definition>const GPIOD_API unsigned int gpiod::line_bulk::MAX_LINES</definition>
        <argsstring></argsstring>
        <name>MAX_LINES</name>
        <briefdescription>
<para>Max number of lines that this object can hold. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="740" column="37" bodyfile="bindings/cxx/gpiod.hpp" bodystart="740" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgpiod_1_1line__bulk_1a26490cf515ff158bd91d946188c67ddf" prot="private" static="no" mutable="no">
        <type>::std::vector&lt; <ref refid="classgpiod_1_1line" kindref="compound">line</ref> &gt;</type>
        <definition>::std::vector&lt;line&gt; gpiod::line_bulk::_m_bulk</definition>
        <argsstring></argsstring>
        <name>_m_bulk</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="845" column="15" bodyfile="bindings/cxx/gpiod.hpp" bodystart="845" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgpiod_1_1line__bulk_1ad3f8f825c8642d4e83854c02af58d755" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref></type>
        <definition>GPIOD_API gpiod::line_bulk::line_bulk</definition>
        <argsstring>(void)=default</argsstring>
        <name>line_bulk</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Creates an empty <ref refid="classgpiod_1_1line__bulk" kindref="compound">line_bulk</ref> object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="579" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__bulk_1ab57e20cf72c669713dc5e5eac08e882f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref></type>
        <definition>GPIOD_API gpiod::line_bulk::line_bulk</definition>
        <argsstring>(const ::std::vector&lt; line &gt; &amp;lines)</argsstring>
        <name>line_bulk</name>
        <param>
          <type>const ::std::vector&lt; <ref refid="classgpiod_1_1line" kindref="compound">line</ref> &gt; &amp;</type>
          <declname>lines</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="classgpiod_1_1line__bulk" kindref="compound">line_bulk</ref> from a vector of lines. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lines</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of <ref refid="classgpiod_1_1line" kindref="compound">gpiod::line</ref> objects. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>All lines must be owned by the same GPIO chip. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="586" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__bulk_1aec9ba257a1e3b35b2a767076432b65f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref></type>
        <definition>GPIOD_API gpiod::line_bulk::line_bulk</definition>
        <argsstring>(const line_bulk &amp;other)=default</argsstring>
        <name>line_bulk</name>
        <param>
          <type>const <ref refid="classgpiod_1_1line__bulk" kindref="compound">line_bulk</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Other <ref refid="classgpiod_1_1line__bulk" kindref="compound">line_bulk</ref> object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="592" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__bulk_1a90028763c4ebfb9cde97ead1353b88dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref></type>
        <definition>GPIOD_API gpiod::line_bulk::line_bulk</definition>
        <argsstring>(line_bulk &amp;&amp;other)=default</argsstring>
        <name>line_bulk</name>
        <param>
          <type><ref refid="classgpiod_1_1line__bulk" kindref="compound">line_bulk</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Move constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Other <ref refid="classgpiod_1_1line__bulk" kindref="compound">line_bulk</ref> object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="598" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__bulk_1ab27595c5728f6c0c09514b10107e54ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> <ref refid="classgpiod_1_1line__bulk" kindref="compound">line_bulk</ref> &amp;</type>
        <definition>GPIOD_API line_bulk&amp; gpiod::line_bulk::operator=</definition>
        <argsstring>(const line_bulk &amp;other)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classgpiod_1_1line__bulk" kindref="compound">line_bulk</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Assignment operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Other <ref refid="classgpiod_1_1line__bulk" kindref="compound">line_bulk</ref> object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to this object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="605" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__bulk_1a916af63c0e57d47a0c0fa6cb205248b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> <ref refid="classgpiod_1_1line__bulk" kindref="compound">line_bulk</ref> &amp;</type>
        <definition>GPIOD_API line_bulk&amp; gpiod::line_bulk::operator=</definition>
        <argsstring>(line_bulk &amp;&amp;other)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classgpiod_1_1line__bulk" kindref="compound">line_bulk</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Move assignment operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Other <ref refid="classgpiod_1_1line__bulk" kindref="compound">line_bulk</ref> object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to this object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="612" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__bulk_1a24d8842d30b43c5c7bcdd60b0cb5ce20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref></type>
        <definition>GPIOD_API gpiod::line_bulk::~line_bulk</definition>
        <argsstring>(void)=default</argsstring>
        <name>~line_bulk</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="617" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__bulk_1a479807b3296c16b0dbb3824799418f88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> void</type>
        <definition>GPIOD_API void gpiod::line_bulk::append</definition>
        <argsstring>(const line &amp;new_line)</argsstring>
        <name>append</name>
        <param>
          <type>const <ref refid="classgpiod_1_1line" kindref="compound">line</ref> &amp;</type>
          <declname>new_line</declname>
        </param>
        <briefdescription>
<para>Add a line to this <ref refid="classgpiod_1_1line__bulk" kindref="compound">line_bulk</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>new_line</parametername>
</parameternamelist>
<parameterdescription>
<para>Line to add. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The new line must be owned by the same chip as all the other lines already held by this <ref refid="classgpiod_1_1line__bulk" kindref="compound">line_bulk</ref> object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="625" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__bulk_1ae88cd977a860aa0c96620081af0f3dbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> <ref refid="classgpiod_1_1line" kindref="compound">line</ref> &amp;</type>
        <definition>GPIOD_API line&amp; gpiod::line_bulk::get</definition>
        <argsstring>(unsigned int offset)</argsstring>
        <name>get</name>
        <param>
          <type>unsigned int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Get the line at given offset. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset of the line to get. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to the line object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="632" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__bulk_1a64b471c0dd60c5dc17bff2a01405d259" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> <ref refid="classgpiod_1_1line" kindref="compound">line</ref> &amp;</type>
        <definition>GPIOD_API line&amp; gpiod::line_bulk::operator[]</definition>
        <argsstring>(unsigned int offset)</argsstring>
        <name>operator[]</name>
        <param>
          <type>unsigned int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Get the line at given offset without bounds checking. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset of the line to get. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to the line object. </para>
</simplesect>
<simplesect kind="note"><para>No bounds checking is performed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="640" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__bulk_1a040e614ad11cdcb628af60aef0aa9d97" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> unsigned int</type>
        <definition>GPIOD_API unsigned int gpiod::line_bulk::size</definition>
        <argsstring>(void) const noexcept</argsstring>
        <name>size</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the number of lines currently held by this object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Number of elements in this <ref refid="classgpiod_1_1line__bulk" kindref="compound">line_bulk</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="646" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__bulk_1a368f91c61a4073760bbb4c70b82b1913" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> bool</type>
        <definition>GPIOD_API bool gpiod::line_bulk::empty</definition>
        <argsstring>(void) const noexcept</argsstring>
        <name>empty</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check if this <ref refid="classgpiod_1_1line__bulk" kindref="compound">line_bulk</ref> doesn&apos;t hold any lines. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if this object is empty, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="652" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__bulk_1aad0998d9764a3114ae83b10fcfd912da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> void</type>
        <definition>GPIOD_API void gpiod::line_bulk::clear</definition>
        <argsstring>(void)</argsstring>
        <name>clear</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Remove all lines from this object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="657" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__bulk_1ab1122d22f771d605f2a2f7c8e63280fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> void</type>
        <definition>GPIOD_API void gpiod::line_bulk::request</definition>
        <argsstring>(const line_request &amp;config, const ::std::vector&lt; int &gt; default_vals=::std::vector&lt; int &gt;()) const</argsstring>
        <name>request</name>
        <param>
          <type>const <ref refid="structgpiod_1_1line__request" kindref="compound">line_request</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>const ::std::vector&lt; int &gt;</type>
          <declname>default_vals</declname>
          <defval>::std::vector&lt; int &gt;()</defval>
        </param>
        <briefdescription>
<para>Request all lines held by this object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Request config (see <ref refid="structgpiod_1_1line__request" kindref="compound">gpiod::line_request</ref>). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>default_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of default values. Only relevant for output direction requests. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="665" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__bulk_1a3445cfcece36bafd47c9d6648fe1bc50" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> void</type>
        <definition>GPIOD_API void gpiod::line_bulk::release</definition>
        <argsstring>(void) const</argsstring>
        <name>release</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Release all lines held by this object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="671" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__bulk_1a5d09f5b9fc38e864bea0e9db2d3a7085" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> ::std::vector&lt; int &gt;</type>
        <definition>GPIOD_API ::std::vector&lt;int&gt; gpiod::line_bulk::get_values</definition>
        <argsstring>(void) const</argsstring>
        <name>get_values</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Read values from all lines held by this object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Vector containing line values the order of which corresponds with the order of lines in the internal array. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="678" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__bulk_1aa4faec7d45a640d29344bdfa087aa2c0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> void</type>
        <definition>GPIOD_API void gpiod::line_bulk::set_values</definition>
        <argsstring>(const ::std::vector&lt; int &gt; &amp;values) const</argsstring>
        <name>set_values</name>
        <param>
          <type>const ::std::vector&lt; int &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
<para>Set values of all lines held by this object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of values to set. Must be the same size as the number of lines held by this <ref refid="classgpiod_1_1line__bulk" kindref="compound">line_bulk</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="685" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__bulk_1a07e7316195617c1a135c7ea7580ca780" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> void</type>
        <definition>GPIOD_API void gpiod::line_bulk::set_config</definition>
        <argsstring>(int direction, ::std::bitset&lt; 32 &gt; flags, const ::std::vector&lt; int &gt; values=::std::vector&lt; int &gt;()) const</argsstring>
        <name>set_config</name>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>::std::bitset&lt; 32 &gt;</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>const ::std::vector&lt; int &gt;</type>
          <declname>values</declname>
          <defval>::std::vector&lt; int &gt;()</defval>
        </param>
        <briefdescription>
<para>Set configuration of all lines held by this object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>direction</parametername>
</parameternamelist>
<parameterdescription>
<para>New direction. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Replacement flags. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of values to set. Must be the same size as the number of lines held by this <ref refid="classgpiod_1_1line__bulk" kindref="compound">line_bulk</ref>. Only relevant for output direction requests. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="695" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__bulk_1a0bf6b6ae66f087db05db8b9b0ba0e92b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> void</type>
        <definition>GPIOD_API void gpiod::line_bulk::set_flags</definition>
        <argsstring>(::std::bitset&lt; 32 &gt; flags) const</argsstring>
        <name>set_flags</name>
        <param>
          <type>::std::bitset&lt; 32 &gt;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Set configuration flags of all lines held by this object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Replacement flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="702" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__bulk_1a0988b1d0342e0ef3d4f2bd8d00a561bc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> void</type>
        <definition>GPIOD_API void gpiod::line_bulk::set_direction_input</definition>
        <argsstring>() const</argsstring>
        <name>set_direction_input</name>
        <briefdescription>
<para>Change the direction all lines held by this object to input. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="707" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__bulk_1a185ff31eb0d30fb23bbc676c7ad629dc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> void</type>
        <definition>GPIOD_API void gpiod::line_bulk::set_direction_output</definition>
        <argsstring>(const ::std::vector&lt; int &gt; &amp;values) const</argsstring>
        <name>set_direction_output</name>
        <param>
          <type>const ::std::vector&lt; int &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
<para>Change the direction all lines held by this object to output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of values to set. Must be the same size as the number of lines held by this <ref refid="classgpiod_1_1line__bulk" kindref="compound">line_bulk</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="714" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__bulk_1af7bde32fe6eef0c40cbc0892fe61bea8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> <ref refid="classgpiod_1_1line__bulk" kindref="compound">line_bulk</ref></type>
        <definition>GPIOD_API line_bulk gpiod::line_bulk::event_wait</definition>
        <argsstring>(const ::std::chrono::nanoseconds &amp;timeout) const</argsstring>
        <name>event_wait</name>
        <param>
          <type>const ::std::chrono::nanoseconds &amp;</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Poll the set of lines for line events. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of nanoseconds to wait before returning an empty <ref refid="classgpiod_1_1line__bulk" kindref="compound">line_bulk</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a <ref refid="classgpiod_1_1line__bulk" kindref="compound">line_bulk</ref> object containing lines on which events occurred. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="723" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__bulk_1ac8fe2fd8554f868bb18003977e6a9718" prot="public" static="no" const="yes" explicit="yes" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref></type>
        <definition>GPIOD_API gpiod::line_bulk::operator bool</definition>
        <argsstring>(void) const noexcept</argsstring>
        <name>operator bool</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check if this object holds any lines. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if this <ref refid="classgpiod_1_1line__bulk" kindref="compound">line_bulk</ref> holds at least one line, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="729" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__bulk_1a8b8e6068b49a201a84203b79e31e765e" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> bool</type>
        <definition>GPIOD_API bool gpiod::line_bulk::operator!</definition>
        <argsstring>(void) const noexcept</argsstring>
        <name>operator!</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check if this object doesn&apos;t hold any lines. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if this <ref refid="classgpiod_1_1line__bulk" kindref="compound">line_bulk</ref> is empty, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="735" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__bulk_1a4046893ed81f163e4e5c1f8fcd854c10" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> <ref refid="classgpiod_1_1line__bulk_1_1iterator" kindref="compound">iterator</ref></type>
        <definition>GPIOD_API iterator gpiod::line_bulk::begin</definition>
        <argsstring>(void) noexcept</argsstring>
        <name>begin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns an iterator to the first line. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A <ref refid="classgpiod_1_1line__bulk" kindref="compound">line_bulk</ref> iterator. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="832" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__bulk_1a7f699e346cdd3286d06506d132f94dd7" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> <ref refid="classgpiod_1_1line__bulk_1_1iterator" kindref="compound">iterator</ref></type>
        <definition>GPIOD_API iterator gpiod::line_bulk::end</definition>
        <argsstring>(void) noexcept</argsstring>
        <name>end</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns an iterator to the element following the last line. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A <ref refid="classgpiod_1_1line__bulk" kindref="compound">line_bulk</ref> iterator. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="838" column="20"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classgpiod_1_1line__bulk_1aa48aaac56ee7d88e421e95731712a334" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gpiod::line_bulk::throw_if_empty</definition>
        <argsstring>(void) const</argsstring>
        <name>throw_if_empty</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="842" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line__bulk_1a9c3053cd77d340d4a50e2de203c36a6c" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gpiod::line_bulk::to_line_bulk</definition>
        <argsstring>(::gpiod_line_bulk *bulk) const</argsstring>
        <name>to_line_bulk</name>
        <param>
          <type>::<ref refid="structgpiod__line__bulk" kindref="compound">gpiod_line_bulk</ref> *</type>
          <declname>bulk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="843" column="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a set of GPIO lines. </para>
    </briefdescription>
    <detaileddescription>
<para>Internally an object of this class stores an array of line objects owned by a single chip. </para>
    </detaileddescription>
    <location file="bindings/cxx/gpiod.hpp" line="573" column="1" bodyfile="bindings/cxx/gpiod.hpp" bodystart="572" bodyend="846"/>
    <listofallmembers>
      <member refid="classgpiod_1_1line__bulk_1a26490cf515ff158bd91d946188c67ddf" prot="private" virt="non-virtual"><scope>gpiod::line_bulk</scope><name>_m_bulk</name></member>
      <member refid="classgpiod_1_1line__bulk_1a479807b3296c16b0dbb3824799418f88" prot="public" virt="non-virtual"><scope>gpiod::line_bulk</scope><name>append</name></member>
      <member refid="classgpiod_1_1line__bulk_1a4046893ed81f163e4e5c1f8fcd854c10" prot="public" virt="non-virtual"><scope>gpiod::line_bulk</scope><name>begin</name></member>
      <member refid="classgpiod_1_1line__bulk_1aad0998d9764a3114ae83b10fcfd912da" prot="public" virt="non-virtual"><scope>gpiod::line_bulk</scope><name>clear</name></member>
      <member refid="classgpiod_1_1line__bulk_1a368f91c61a4073760bbb4c70b82b1913" prot="public" virt="non-virtual"><scope>gpiod::line_bulk</scope><name>empty</name></member>
      <member refid="classgpiod_1_1line__bulk_1a7f699e346cdd3286d06506d132f94dd7" prot="public" virt="non-virtual"><scope>gpiod::line_bulk</scope><name>end</name></member>
      <member refid="classgpiod_1_1line__bulk_1af7bde32fe6eef0c40cbc0892fe61bea8" prot="public" virt="non-virtual"><scope>gpiod::line_bulk</scope><name>event_wait</name></member>
      <member refid="classgpiod_1_1line__bulk_1ae88cd977a860aa0c96620081af0f3dbf" prot="public" virt="non-virtual"><scope>gpiod::line_bulk</scope><name>get</name></member>
      <member refid="classgpiod_1_1line__bulk_1a5d09f5b9fc38e864bea0e9db2d3a7085" prot="public" virt="non-virtual"><scope>gpiod::line_bulk</scope><name>get_values</name></member>
      <member refid="classgpiod_1_1line__bulk_1ad3f8f825c8642d4e83854c02af58d755" prot="public" virt="non-virtual"><scope>gpiod::line_bulk</scope><name>line_bulk</name></member>
      <member refid="classgpiod_1_1line__bulk_1ab57e20cf72c669713dc5e5eac08e882f" prot="public" virt="non-virtual"><scope>gpiod::line_bulk</scope><name>line_bulk</name></member>
      <member refid="classgpiod_1_1line__bulk_1aec9ba257a1e3b35b2a767076432b65f3" prot="public" virt="non-virtual"><scope>gpiod::line_bulk</scope><name>line_bulk</name></member>
      <member refid="classgpiod_1_1line__bulk_1a90028763c4ebfb9cde97ead1353b88dc" prot="public" virt="non-virtual"><scope>gpiod::line_bulk</scope><name>line_bulk</name></member>
      <member refid="classgpiod_1_1line__bulk_1aff05a49a760fe43396474a9073158a98" prot="public" virt="non-virtual"><scope>gpiod::line_bulk</scope><name>MAX_LINES</name></member>
      <member refid="classgpiod_1_1line__bulk_1ac8fe2fd8554f868bb18003977e6a9718" prot="public" virt="non-virtual"><scope>gpiod::line_bulk</scope><name>operator bool</name></member>
      <member refid="classgpiod_1_1line__bulk_1a8b8e6068b49a201a84203b79e31e765e" prot="public" virt="non-virtual"><scope>gpiod::line_bulk</scope><name>operator!</name></member>
      <member refid="classgpiod_1_1line__bulk_1ab27595c5728f6c0c09514b10107e54ff" prot="public" virt="non-virtual"><scope>gpiod::line_bulk</scope><name>operator=</name></member>
      <member refid="classgpiod_1_1line__bulk_1a916af63c0e57d47a0c0fa6cb205248b3" prot="public" virt="non-virtual"><scope>gpiod::line_bulk</scope><name>operator=</name></member>
      <member refid="classgpiod_1_1line__bulk_1a64b471c0dd60c5dc17bff2a01405d259" prot="public" virt="non-virtual"><scope>gpiod::line_bulk</scope><name>operator[]</name></member>
      <member refid="classgpiod_1_1line__bulk_1a3445cfcece36bafd47c9d6648fe1bc50" prot="public" virt="non-virtual"><scope>gpiod::line_bulk</scope><name>release</name></member>
      <member refid="classgpiod_1_1line__bulk_1ab1122d22f771d605f2a2f7c8e63280fd" prot="public" virt="non-virtual"><scope>gpiod::line_bulk</scope><name>request</name></member>
      <member refid="classgpiod_1_1line__bulk_1a07e7316195617c1a135c7ea7580ca780" prot="public" virt="non-virtual"><scope>gpiod::line_bulk</scope><name>set_config</name></member>
      <member refid="classgpiod_1_1line__bulk_1a0988b1d0342e0ef3d4f2bd8d00a561bc" prot="public" virt="non-virtual"><scope>gpiod::line_bulk</scope><name>set_direction_input</name></member>
      <member refid="classgpiod_1_1line__bulk_1a185ff31eb0d30fb23bbc676c7ad629dc" prot="public" virt="non-virtual"><scope>gpiod::line_bulk</scope><name>set_direction_output</name></member>
      <member refid="classgpiod_1_1line__bulk_1a0bf6b6ae66f087db05db8b9b0ba0e92b" prot="public" virt="non-virtual"><scope>gpiod::line_bulk</scope><name>set_flags</name></member>
      <member refid="classgpiod_1_1line__bulk_1aa4faec7d45a640d29344bdfa087aa2c0" prot="public" virt="non-virtual"><scope>gpiod::line_bulk</scope><name>set_values</name></member>
      <member refid="classgpiod_1_1line__bulk_1a040e614ad11cdcb628af60aef0aa9d97" prot="public" virt="non-virtual"><scope>gpiod::line_bulk</scope><name>size</name></member>
      <member refid="classgpiod_1_1line__bulk_1aa48aaac56ee7d88e421e95731712a334" prot="private" virt="non-virtual"><scope>gpiod::line_bulk</scope><name>throw_if_empty</name></member>
      <member refid="classgpiod_1_1line__bulk_1a9c3053cd77d340d4a50e2de203c36a6c" prot="private" virt="non-virtual"><scope>gpiod::line_bulk</scope><name>to_line_bulk</name></member>
      <member refid="classgpiod_1_1line__bulk_1a24d8842d30b43c5c7bcdd60b0cb5ce20" prot="public" virt="non-virtual"><scope>gpiod::line_bulk</scope><name>~line_bulk</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

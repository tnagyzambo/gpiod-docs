<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classgpiod_1_1line" kind="class" language="C++" prot="public">
    <compoundname>gpiod::line</compoundname>
    <includes refid="gpiod_8hpp" local="no">gpiod.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classgpiod_1_1line_1a0a1fcebbe8cefeb3973dc04e2e26e842" prot="public" static="no" strong="no">
        <type>int</type>
        <name>@13</name>
        <enumvalue id="classgpiod_1_1line_1a0a1fcebbe8cefeb3973dc04e2e26e842a4c12e4913a615469db09b7076a1a108c" prot="public">
          <name>DIRECTION_INPUT</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Line&apos;s direction setting is input. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgpiod_1_1line_1a0a1fcebbe8cefeb3973dc04e2e26e842a05f4b8d577cf72a0935c083e34450169" prot="public">
          <name>DIRECTION_OUTPUT</name>
          <briefdescription>
<para>Line&apos;s direction setting is output. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Possible direction settings. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="490" column="6" bodyfile="bindings/cxx/gpiod.hpp" bodystart="490" bodyend="495"/>
      </memberdef>
      <memberdef kind="enum" id="classgpiod_1_1line_1ad15e4b49598339a71f369b8827c356ec" prot="public" static="no" strong="no">
        <type>int</type>
        <name>@14</name>
        <enumvalue id="classgpiod_1_1line_1ad15e4b49598339a71f369b8827c356eca3cd3ddd15cb6d8119d4d430f6aeaca70" prot="public">
          <name>ACTIVE_LOW</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Line&apos;s active state is low. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgpiod_1_1line_1ad15e4b49598339a71f369b8827c356ecadb15c880dac098b0596674d9abd5b2e3" prot="public">
          <name>ACTIVE_HIGH</name>
          <briefdescription>
<para>Line&apos;s active state is high. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Possible active state settings. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="500" column="6" bodyfile="bindings/cxx/gpiod.hpp" bodystart="500" bodyend="505"/>
      </memberdef>
      <memberdef kind="enum" id="classgpiod_1_1line_1a0cb772864d60289b3aecbebb23553ab5" prot="public" static="no" strong="no">
        <type>int</type>
        <name>@15</name>
        <enumvalue id="classgpiod_1_1line_1a0cb772864d60289b3aecbebb23553ab5af2ccd52d5119ea51b7c67ed55062e683" prot="public">
          <name>BIAS_AS_IS</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Line&apos;s bias state is unknown. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgpiod_1_1line_1a0cb772864d60289b3aecbebb23553ab5ae3f21a9528026790c476ce5add95db3f" prot="public">
          <name>BIAS_DISABLE</name>
          <briefdescription>
<para>Line&apos;s internal bias is disabled. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgpiod_1_1line_1a0cb772864d60289b3aecbebb23553ab5a3bc326589689413e4698f967b934574e" prot="public">
          <name>BIAS_PULL_UP</name>
          <briefdescription>
<para>Line&apos;s internal pull-up bias is enabled. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgpiod_1_1line_1a0cb772864d60289b3aecbebb23553ab5ad46e0e1e5df2f991389994eebe037f27" prot="public">
          <name>BIAS_PULL_DOWN</name>
          <briefdescription>
<para>Line&apos;s internal pull-down bias is enabled. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Possible bias settings. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="510" column="6" bodyfile="bindings/cxx/gpiod.hpp" bodystart="510" bodyend="519"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgpiod_1_1line_1a14202597653f85cd165c56337dbfef21" prot="private" static="no" mutable="no">
        <type>::gpiod_line *</type>
        <definition>::gpiod_line* gpiod::line::_m_line</definition>
        <argsstring></argsstring>
        <name>_m_line</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="528" column="14" bodyfile="bindings/cxx/gpiod.hpp" bodystart="528" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgpiod_1_1line_1ab9d15dc4cb23b86f5a6adfb702d451ab" prot="private" static="no" mutable="no">
        <type><ref refid="classgpiod_1_1chip" kindref="compound">chip</ref></type>
        <definition>chip gpiod::line::_m_chip</definition>
        <argsstring></argsstring>
        <name>_m_chip</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="529" column="6" bodyfile="bindings/cxx/gpiod.hpp" bodystart="529" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgpiod_1_1line_1afc70288e6d9f6b4a9ac88c51bef5709a" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend gpiod::line::chip</definition>
        <argsstring></argsstring>
        <name>chip</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="531" column="8" bodyfile="bindings/cxx/gpiod.hpp" bodystart="531" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgpiod_1_1line_1ac6d29b727796bde412ec48b4997b500e" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend gpiod::line::line_bulk</definition>
        <argsstring></argsstring>
        <name>line_bulk</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="532" column="8" bodyfile="bindings/cxx/gpiod.hpp" bodystart="532" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgpiod_1_1line_1a8515288e30094ff836905ed209651fcd" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend gpiod::line::line_iter</definition>
        <argsstring></argsstring>
        <name>line_iter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="533" column="8" bodyfile="bindings/cxx/gpiod.hpp" bodystart="533" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgpiod_1_1line_1af5da7ce47aa77beee754305212786756" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref></type>
        <definition>GPIOD_API gpiod::line::line</definition>
        <argsstring>(void)</argsstring>
        <name>line</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Creates an empty line object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="269" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1ad43e7d2fdc16dd6a9276033885278046" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref></type>
        <definition>GPIOD_API gpiod::line::line</definition>
        <argsstring>(const line &amp;other)=default</argsstring>
        <name>line</name>
        <param>
          <type>const <ref refid="classgpiod_1_1line" kindref="compound">line</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Other line object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="275" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1a1c57688cc9b325f209cca3cd007a2b7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref></type>
        <definition>GPIOD_API gpiod::line::line</definition>
        <argsstring>(line &amp;&amp;other)=default</argsstring>
        <name>line</name>
        <param>
          <type><ref refid="classgpiod_1_1line" kindref="compound">line</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Move constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Other line object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="281" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1a68b757ddd5faa2d4b9647a0d23003a3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> <ref refid="classgpiod_1_1line" kindref="compound">line</ref> &amp;</type>
        <definition>GPIOD_API line&amp; gpiod::line::operator=</definition>
        <argsstring>(const line &amp;other)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classgpiod_1_1line" kindref="compound">line</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Assignment operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Other line object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to this object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="288" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1adf46f41bacc27d6d0afd431c219f4387" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> <ref refid="classgpiod_1_1line" kindref="compound">line</ref> &amp;</type>
        <definition>GPIOD_API line&amp; gpiod::line::operator=</definition>
        <argsstring>(line &amp;&amp;other)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classgpiod_1_1line" kindref="compound">line</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Move assignment operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Other line object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to this object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="295" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1afce86095acfcc70ee2002202fd96d86b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref></type>
        <definition>GPIOD_API gpiod::line::~line</definition>
        <argsstring>(void)=default</argsstring>
        <name>~line</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="300" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1a8bb1223364c78d38b6afa984608382f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> unsigned int</type>
        <definition>GPIOD_API unsigned int gpiod::line::offset</definition>
        <argsstring>(void) const</argsstring>
        <name>offset</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the offset of this line. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Offet of this line. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="306" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1a369789d1be4da5f39f9971a2c63162b2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> ::std::string</type>
        <definition>GPIOD_API ::std::string gpiod::line::name</definition>
        <argsstring>(void) const</argsstring>
        <name>name</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the name of this line (if any). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Name of this line or an empty string if it is unnamed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="312" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1aefe39508ff3a794464e83022cbf64648" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> ::std::string</type>
        <definition>GPIOD_API ::std::string gpiod::line::consumer</definition>
        <argsstring>(void) const</argsstring>
        <name>consumer</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the consumer of this line (if any). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Name of the consumer of this line or an empty string if it is unused. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="319" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1a048b3b03928c9b3eaf007bc2d73b977b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> int</type>
        <definition>GPIOD_API int gpiod::line::direction</definition>
        <argsstring>(void) const</argsstring>
        <name>direction</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get current direction of this line. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Current direction setting. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="325" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1a8256722d0821fd34f5f63b7c4e96cee4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> int</type>
        <definition>GPIOD_API int gpiod::line::active_state</definition>
        <argsstring>(void) const</argsstring>
        <name>active_state</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get current active state of this line. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Current active state setting. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="331" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1a8ff19b77a595fa3291925f32a88c30a1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> int</type>
        <definition>GPIOD_API int gpiod::line::bias</definition>
        <argsstring>(void) const</argsstring>
        <name>bias</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get current bias of this line. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Current bias setting. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="337" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1ac1ed47861e99362e1118d0a9c5c400b0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> bool</type>
        <definition>GPIOD_API bool gpiod::line::is_used</definition>
        <argsstring>(void) const</argsstring>
        <name>is_used</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check if this line is used by the kernel or other user space process. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if this line is in use, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="344" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1a6b602375fe4ca0701df1ae24fe0c1f37" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> bool</type>
        <definition>GPIOD_API bool gpiod::line::is_open_drain</definition>
        <argsstring>(void) const</argsstring>
        <name>is_open_drain</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check if this line represents an open-drain GPIO. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the line is an open-drain GPIO, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="350" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1a133677fa0f51de2e9242a1af0f854d44" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> bool</type>
        <definition>GPIOD_API bool gpiod::line::is_open_source</definition>
        <argsstring>(void) const</argsstring>
        <name>is_open_source</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check if this line represents an open-source GPIO. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the line is an open-source GPIO, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="356" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1aaf5571ea324941ef8486e7c4e1c33bee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> void</type>
        <definition>GPIOD_API void gpiod::line::request</definition>
        <argsstring>(const line_request &amp;config, int default_val=0) const</argsstring>
        <name>request</name>
        <param>
          <type>const <ref refid="structgpiod_1_1line__request" kindref="compound">line_request</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>int</type>
          <declname>default_val</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Request this line. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Request config (see <ref refid="structgpiod_1_1line__request" kindref="compound">gpiod::line_request</ref>). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>default_val</parametername>
</parameternamelist>
<parameterdescription>
<para>Default value - only matters for OUTPUT direction. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="363" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1aaad52f9878fd8a03335fe1f84843e243" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> void</type>
        <definition>GPIOD_API void gpiod::line::release</definition>
        <argsstring>(void) const</argsstring>
        <name>release</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Release the line if it was previously requested. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="368" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1a7882dd390753467a594769a6019f61c3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> bool</type>
        <definition>GPIOD_API bool gpiod::line::is_requested</definition>
        <argsstring>(void) const</argsstring>
        <name>is_requested</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check if this user has ownership of this line. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the user has ownership of this line, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="374" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1a7049b6ffde37a300e1da5eac27751a60" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> int</type>
        <definition>GPIOD_API int gpiod::line::get_value</definition>
        <argsstring>(void) const</argsstring>
        <name>get_value</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Read the line value. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Current value (0 or 1). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="380" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1a834ab828c16999e6ac3d83182552e077" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> void</type>
        <definition>GPIOD_API void gpiod::line::set_value</definition>
        <argsstring>(int val) const</argsstring>
        <name>set_value</name>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set the value of this line. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>New value (0 or 1). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="386" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1a4062f11e619dd6e789441a566403e2b7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> void</type>
        <definition>GPIOD_API void gpiod::line::set_config</definition>
        <argsstring>(int direction, ::std::bitset&lt; 32 &gt; flags, int value=0) const</argsstring>
        <name>set_config</name>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>::std::bitset&lt; 32 &gt;</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Set configuration of this line. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>direction</parametername>
</parameternamelist>
<parameterdescription>
<para>New direction. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Replacement flags. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>New value (0 or 1) - only matters for OUTPUT direction. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="394" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1a15326e56fba704755bfa4f0f0e9042fb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> void</type>
        <definition>GPIOD_API void gpiod::line::set_flags</definition>
        <argsstring>(::std::bitset&lt; 32 &gt; flags) const</argsstring>
        <name>set_flags</name>
        <param>
          <type>::std::bitset&lt; 32 &gt;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Set configuration flags of this line. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Replacement flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="401" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1acc3c9ea3ccdb0c1693b7c0c4728bb1d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> void</type>
        <definition>GPIOD_API void gpiod::line::set_direction_input</definition>
        <argsstring>() const</argsstring>
        <name>set_direction_input</name>
        <briefdescription>
<para>Change the direction this line to input. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="406" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1aefd63e820a1c858c489eceef49e77722" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> void</type>
        <definition>GPIOD_API void gpiod::line::set_direction_output</definition>
        <argsstring>(int value=0) const</argsstring>
        <name>set_direction_output</name>
        <param>
          <type>int</type>
          <declname>value</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Change the direction this lines to output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>New value (0 or 1). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="412" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1a88ab4f0716d05e1c3db030a7515a12d8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> bool</type>
        <definition>GPIOD_API bool gpiod::line::event_wait</definition>
        <argsstring>(const ::std::chrono::nanoseconds &amp;timeout) const</argsstring>
        <name>event_wait</name>
        <param>
          <type>const ::std::chrono::nanoseconds &amp;</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Wait for an event on this line. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Time to wait before returning if no event occurred. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if an event occurred and can be read, false if the wait timed out. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="420" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1a79bdd351d7a2d6b02e8998bbfc6813a3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> <ref refid="structgpiod_1_1line__event" kindref="compound">line_event</ref></type>
        <definition>GPIOD_API line_event gpiod::line::event_read</definition>
        <argsstring>(void) const</argsstring>
        <name>event_read</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Read a line event. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Line event object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="426" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1a3c982dbc3a5337dbdc28cb481bfbc3b0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> ::std::vector&lt; <ref refid="structgpiod_1_1line__event" kindref="compound">line_event</ref> &gt;</type>
        <definition>GPIOD_API ::std::vector&lt;line_event&gt; gpiod::line::event_read_multiple</definition>
        <argsstring>(void) const</argsstring>
        <name>event_read_multiple</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Read multiple line events. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Vector of line event objects. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="432" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1af532c8bcf810188039a9fdbd00ab72eb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> int</type>
        <definition>GPIOD_API int gpiod::line::event_get_fd</definition>
        <argsstring>(void) const</argsstring>
        <name>event_get_fd</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the event file descriptor associated with this line. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>File descriptor number. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="438" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1ad466d57f289dc5192c6302c9b75a312b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> <ref refid="classgpiod_1_1chip" kindref="compound">chip</ref> &amp;</type>
        <definition>const GPIOD_API chip&amp; gpiod::line::get_chip</definition>
        <argsstring>(void) const</argsstring>
        <name>get_chip</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the reference to the parent chip. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Reference to the parent chip object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="444" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1abd0449a7e49c840f7615036a6274a55d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> void</type>
        <definition>GPIOD_API void gpiod::line::update</definition>
        <argsstring>(void) const</argsstring>
        <name>update</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Re-read the line info from the kernel. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="449" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1a415d408ef87ea502b8f947dc64dea32d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> void</type>
        <definition>GPIOD_API void gpiod::line::reset</definition>
        <argsstring>(void)</argsstring>
        <name>reset</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Reset the state of this object. </para>
        </briefdescription>
        <detaileddescription>
<para>This is useful when the user needs to e.g. keep the <ref refid="structgpiod_1_1line__event" kindref="compound">line_event</ref> object but wants to drop the reference to the GPIO chip indirectly held by the line being the source of the event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="458" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1a5ca27d43edd20af186d9cfdb341cee3e" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> bool</type>
        <definition>GPIOD_API bool gpiod::line::operator==</definition>
        <argsstring>(const line &amp;rhs) const noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classgpiod_1_1line" kindref="compound">line</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Check if two line objects reference the same GPIO line. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>Right-hand side of the equation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if both objects reference the same line, fale otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="465" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1a3e392b93233665c17211825db272b301" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> bool</type>
        <definition>GPIOD_API bool gpiod::line::operator!=</definition>
        <argsstring>(const line &amp;rhs) const noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classgpiod_1_1line" kindref="compound">line</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Check if two line objects reference different GPIO lines. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>Right-hand side of the equation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>False if both objects reference the same line, true otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="472" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1a8bfd14f0e3f6a78ea477be3d8df6fcc3" prot="public" static="no" const="yes" explicit="yes" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref></type>
        <definition>GPIOD_API gpiod::line::operator bool</definition>
        <argsstring>(void) const noexcept</argsstring>
        <name>operator bool</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check if this object holds a reference to any GPIO line. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if this object references a GPIO line, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="478" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1af7c66e02634a27f01e8bc093583ebf6d" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="group__common_1ga21a3297091bbee8cd4829f8a681a085b" kindref="member">GPIOD_API</ref> bool</type>
        <definition>GPIOD_API bool gpiod::line::operator!</definition>
        <argsstring>(void) const noexcept</argsstring>
        <name>operator!</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check if this object doesn&apos;t reference any GPIO line. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if this object doesn&apos;t reference any GPIO line, true otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="485" column="16"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classgpiod_1_1line_1a7af8b8b4d9ac401254d7f679824d8da9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gpiod::line::line</definition>
        <argsstring>(::gpiod_line *line, const chip &amp;owner)</argsstring>
        <name>line</name>
        <param>
          <type>::gpiod_line *</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const <ref refid="classgpiod_1_1chip" kindref="compound">chip</ref> &amp;</type>
          <declname>owner</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="523" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1a29e55a0c751c680fd1eb6c3ea18c9289" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gpiod::line::throw_if_null</definition>
        <argsstring>(void) const</argsstring>
        <name>throw_if_null</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="525" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classgpiod_1_1line_1a240cc3b4bd554154b60f8d93c04916fc" prot="private" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="structgpiod_1_1line__event" kindref="compound">line_event</ref></type>
        <definition>line_event gpiod::line::make_line_event</definition>
        <argsstring>(const ::gpiod_line_event &amp;event) const noexcept</argsstring>
        <name>make_line_event</name>
        <param>
          <type>const ::<ref refid="structgpiod__line__event" kindref="compound">gpiod_line_event</ref> &amp;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bindings/cxx/gpiod.hpp" line="526" column="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a single GPIO line. </para>
    </briefdescription>
    <detaileddescription>
<para>Internally this class holds a raw pointer to a GPIO line descriptor and a reference to the parent chip. All line resources are freed when the last reference to the parent chip is dropped. </para>
    </detaileddescription>
    <location file="bindings/cxx/gpiod.hpp" line="263" column="1" bodyfile="bindings/cxx/gpiod.hpp" bodystart="262" bodyend="534"/>
    <listofallmembers>
      <member refid="classgpiod_1_1line_1ab9d15dc4cb23b86f5a6adfb702d451ab" prot="private" virt="non-virtual"><scope>gpiod::line</scope><name>_m_chip</name></member>
      <member refid="classgpiod_1_1line_1a14202597653f85cd165c56337dbfef21" prot="private" virt="non-virtual"><scope>gpiod::line</scope><name>_m_line</name></member>
      <member refid="classgpiod_1_1line_1ad15e4b49598339a71f369b8827c356ecadb15c880dac098b0596674d9abd5b2e3" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>ACTIVE_HIGH</name></member>
      <member refid="classgpiod_1_1line_1ad15e4b49598339a71f369b8827c356eca3cd3ddd15cb6d8119d4d430f6aeaca70" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>ACTIVE_LOW</name></member>
      <member refid="classgpiod_1_1line_1a8256722d0821fd34f5f63b7c4e96cee4" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>active_state</name></member>
      <member refid="classgpiod_1_1line_1a8ff19b77a595fa3291925f32a88c30a1" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>bias</name></member>
      <member refid="classgpiod_1_1line_1a0cb772864d60289b3aecbebb23553ab5af2ccd52d5119ea51b7c67ed55062e683" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>BIAS_AS_IS</name></member>
      <member refid="classgpiod_1_1line_1a0cb772864d60289b3aecbebb23553ab5ae3f21a9528026790c476ce5add95db3f" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>BIAS_DISABLE</name></member>
      <member refid="classgpiod_1_1line_1a0cb772864d60289b3aecbebb23553ab5ad46e0e1e5df2f991389994eebe037f27" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>BIAS_PULL_DOWN</name></member>
      <member refid="classgpiod_1_1line_1a0cb772864d60289b3aecbebb23553ab5a3bc326589689413e4698f967b934574e" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>BIAS_PULL_UP</name></member>
      <member refid="classgpiod_1_1line_1afc70288e6d9f6b4a9ac88c51bef5709a" prot="private" virt="non-virtual"><scope>gpiod::line</scope><name>chip</name></member>
      <member refid="classgpiod_1_1line_1aefe39508ff3a794464e83022cbf64648" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>consumer</name></member>
      <member refid="classgpiod_1_1line_1a048b3b03928c9b3eaf007bc2d73b977b" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>direction</name></member>
      <member refid="classgpiod_1_1line_1a0a1fcebbe8cefeb3973dc04e2e26e842a4c12e4913a615469db09b7076a1a108c" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>DIRECTION_INPUT</name></member>
      <member refid="classgpiod_1_1line_1a0a1fcebbe8cefeb3973dc04e2e26e842a05f4b8d577cf72a0935c083e34450169" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>DIRECTION_OUTPUT</name></member>
      <member refid="classgpiod_1_1line_1af532c8bcf810188039a9fdbd00ab72eb" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>event_get_fd</name></member>
      <member refid="classgpiod_1_1line_1a79bdd351d7a2d6b02e8998bbfc6813a3" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>event_read</name></member>
      <member refid="classgpiod_1_1line_1a3c982dbc3a5337dbdc28cb481bfbc3b0" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>event_read_multiple</name></member>
      <member refid="classgpiod_1_1line_1a88ab4f0716d05e1c3db030a7515a12d8" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>event_wait</name></member>
      <member refid="classgpiod_1_1line_1ad466d57f289dc5192c6302c9b75a312b" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>get_chip</name></member>
      <member refid="classgpiod_1_1line_1a7049b6ffde37a300e1da5eac27751a60" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>get_value</name></member>
      <member refid="classgpiod_1_1line_1a6b602375fe4ca0701df1ae24fe0c1f37" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>is_open_drain</name></member>
      <member refid="classgpiod_1_1line_1a133677fa0f51de2e9242a1af0f854d44" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>is_open_source</name></member>
      <member refid="classgpiod_1_1line_1a7882dd390753467a594769a6019f61c3" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>is_requested</name></member>
      <member refid="classgpiod_1_1line_1ac1ed47861e99362e1118d0a9c5c400b0" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>is_used</name></member>
      <member refid="classgpiod_1_1line_1af5da7ce47aa77beee754305212786756" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>line</name></member>
      <member refid="classgpiod_1_1line_1ad43e7d2fdc16dd6a9276033885278046" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>line</name></member>
      <member refid="classgpiod_1_1line_1a1c57688cc9b325f209cca3cd007a2b7c" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>line</name></member>
      <member refid="classgpiod_1_1line_1a7af8b8b4d9ac401254d7f679824d8da9" prot="private" virt="non-virtual"><scope>gpiod::line</scope><name>line</name></member>
      <member refid="classgpiod_1_1line_1ac6d29b727796bde412ec48b4997b500e" prot="private" virt="non-virtual"><scope>gpiod::line</scope><name>line_bulk</name></member>
      <member refid="classgpiod_1_1line_1a8515288e30094ff836905ed209651fcd" prot="private" virt="non-virtual"><scope>gpiod::line</scope><name>line_iter</name></member>
      <member refid="classgpiod_1_1line_1a240cc3b4bd554154b60f8d93c04916fc" prot="private" virt="non-virtual"><scope>gpiod::line</scope><name>make_line_event</name></member>
      <member refid="classgpiod_1_1line_1a369789d1be4da5f39f9971a2c63162b2" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>name</name></member>
      <member refid="classgpiod_1_1line_1a8bb1223364c78d38b6afa984608382f2" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>offset</name></member>
      <member refid="classgpiod_1_1line_1a8bfd14f0e3f6a78ea477be3d8df6fcc3" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>operator bool</name></member>
      <member refid="classgpiod_1_1line_1af7c66e02634a27f01e8bc093583ebf6d" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>operator!</name></member>
      <member refid="classgpiod_1_1line_1a3e392b93233665c17211825db272b301" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>operator!=</name></member>
      <member refid="classgpiod_1_1line_1a68b757ddd5faa2d4b9647a0d23003a3d" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>operator=</name></member>
      <member refid="classgpiod_1_1line_1adf46f41bacc27d6d0afd431c219f4387" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>operator=</name></member>
      <member refid="classgpiod_1_1line_1a5ca27d43edd20af186d9cfdb341cee3e" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>operator==</name></member>
      <member refid="classgpiod_1_1line_1aaad52f9878fd8a03335fe1f84843e243" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>release</name></member>
      <member refid="classgpiod_1_1line_1aaf5571ea324941ef8486e7c4e1c33bee" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>request</name></member>
      <member refid="classgpiod_1_1line_1a415d408ef87ea502b8f947dc64dea32d" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>reset</name></member>
      <member refid="classgpiod_1_1line_1a4062f11e619dd6e789441a566403e2b7" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>set_config</name></member>
      <member refid="classgpiod_1_1line_1acc3c9ea3ccdb0c1693b7c0c4728bb1d5" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>set_direction_input</name></member>
      <member refid="classgpiod_1_1line_1aefd63e820a1c858c489eceef49e77722" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>set_direction_output</name></member>
      <member refid="classgpiod_1_1line_1a15326e56fba704755bfa4f0f0e9042fb" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>set_flags</name></member>
      <member refid="classgpiod_1_1line_1a834ab828c16999e6ac3d83182552e077" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>set_value</name></member>
      <member refid="classgpiod_1_1line_1a29e55a0c751c680fd1eb6c3ea18c9289" prot="private" virt="non-virtual"><scope>gpiod::line</scope><name>throw_if_null</name></member>
      <member refid="classgpiod_1_1line_1abd0449a7e49c840f7615036a6274a55d" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>update</name></member>
      <member refid="classgpiod_1_1line_1afce86095acfcc70ee2002202fd96d86b" prot="public" virt="non-virtual"><scope>gpiod::line</scope><name>~line</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

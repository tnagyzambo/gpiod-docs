<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="group__line__misc" kind="group">
    <compoundname>line_misc</compoundname>
    <title>Misc line functions</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__line__misc_1ga3317ddc4f587d46ba45bb2b5800914c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct gpiod_line *</type>
        <definition>struct gpiod_line* gpiod_line_get</definition>
        <argsstring>(const char *device, unsigned int offset) GPIOD_API</argsstring>
        <name>gpiod_line_get</name>
        <param>
          <type>const char *</type>
          <declname>device</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Get a GPIO line handle by GPIO chip description and offset. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>String describing the gpiochip. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset of the GPIO line. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GPIO line handle or NULL if an error occurred.</para>
</simplesect>
This routine provides a shorter alternative to calling <ref refid="group__chips_1gaebe2a3810fa09feb734c1395fdd13cb5" kindref="member">gpiod_chip_open_lookup</ref> and <ref refid="group__chips_1gaba9fe5b1cf0c33cd9d7ee911a9c2d4b1" kindref="member">gpiod_chip_get_line</ref>.</para>
<para>If this function succeeds, the caller is responsible for closing the associated GPIO chip. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="1594" column="1" declfile="include/gpiod.h" declline="1594" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__line__misc_1gabff68fa33c66b3b9058589d3cc253376" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct gpiod_line *</type>
        <definition>struct gpiod_line* gpiod_line_find</definition>
        <argsstring>(const char *name) GPIOD_API</argsstring>
        <name>gpiod_line_find</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Find a GPIO line by its name. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the GPIO line. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the GPIO line handle if the line exists in the system or NULL if it couldn&apos;t be located or an error occurred. </para>
</simplesect>
<simplesect kind="attention"><para>GPIO lines are not unique in the linux kernel, neither globally nor within a single chip. This function finds the first line with given name.</para>
</simplesect>
If this routine succeeds, the user must manually close the GPIO chip owning this line to avoid memory leaks. If the line could not be found, this functions sets errno to ENOENT. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="1609" column="17" declfile="include/gpiod.h" declline="1609" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__line__misc_1gac15ddf23982a7c156cc9a7b12da90082" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gpiod_line_close_chip</definition>
        <argsstring>(struct gpiod_line *line) GPIOD_API</argsstring>
        <name>gpiod_line_close_chip</name>
        <param>
          <type>struct gpiod_line *</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Close a GPIO chip owning this line and release all resources. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO line object</para>
</parameterdescription>
</parameteritem>
</parameterlist>
After this function returns, the line must no longer be used. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="1617" column="6" declfile="include/gpiod.h" declline="1617" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__line__misc_1gab43e87d2abcab86780a56464d50ecc1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct gpiod_chip *</type>
        <definition>struct gpiod_chip* gpiod_line_get_chip</definition>
        <argsstring>(struct gpiod_line *line) GPIOD_API</argsstring>
        <name>gpiod_line_get_chip</name>
        <param>
          <type>struct gpiod_line *</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Get the handle to the GPIO chip controlling this line. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>The GPIO line object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the GPIO chip handle controlling this line. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gpiod.h" line="1624" column="17" declfile="include/gpiod.h" declline="1624" declcolumn="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Functions that didn&apos;t fit anywhere else. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
